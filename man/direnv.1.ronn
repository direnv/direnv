direnv(1) -- Unclutter your .profile
====================================

## SYNOPSIS

`direnv` <command> [...]

## DESCRIPTION

direnv is a fast shell extension for bash,zsh and fish that allows you to load/unload environment variables depending on your path.

It has many uses but mine is to have project-specific settings so as to not clutter my "~/.profile". I'm using it to specify ruby version, set AWS or SSH keys, ...

The `direnv` command-line is a proxy to the sub-commands and it work like the git(1) wrapper. You don't usually use that. Once the shell extension is loaded, most of the interaction is done in your ".envrc" files.

## EXAMPLE

    $ cd ~/my_project
    $ ls
    bin/ lib/ Rakefile README.md
    $ echo $PATH
    /usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin
    $ echo PATH_add bin > .envrc
    .envrc is not allowed
    $ direnv allow
    direnv: reloading
    direnv: loading .envrc
    direnv export: ~PATH
    $ echo $PATH
    /Users/you/my_project/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin
    $ cd ..
    direnv: unloading
    direnv export: ~PATH
    $ echo $PATH
    /usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin

## INSTALL

This is what is going to enable the direnv extension. It's going to allow
direnv to execute before every prompt command and adjust the environment.

### BASH

Add the following line at the end of your "~/.bashrc" file:

`eval "$(direnv hook bash)"`

Make sure it appears even after rvm, git-prompt and other shell extensions
that manipulate your prompt.

### ZSH

Add the previous line at the end of you "~/.zshrc" file:

`eval "$(direnv hook zsh)"`

If you want to place it in another file replace $0 with "zsh" as zsh changes
the value dynamically.

### FISH

Add the previous line at the end of your "~/.config/fish/config.fish" file:

`eval (direnv hook fish)`

## USAGE

Place a ".envrc" file in the folder you want and add some export(1) in it. If you cd(1) in that directory or child, the exported variables are available. If you cd(1) out of it, they are unloaded.

A range of utility functions are available in the ".envrc" context and are documented in the direnv-stdlib(1) page.

If the ".envrc" file is added/changed/removed or you is no longer in the path, the environment is reloaded.

## CONTRIBUTE

Bug reports, contributions and forks are welcome.

For bugs, report them on <http://github.com/zimbatm/direnv/issues>

Or if you have some cool usages of direnv that you want to share, feel free to put them in the wiki <https://github.com/zimbatm/direnv/wiki>

## COPYRIGHT

Copyright (C) 2013 zimbatm <http://zimbatm.com> and contributors under the MIT licence.

## SEE ALSO

* direnv-stdlib(1)

